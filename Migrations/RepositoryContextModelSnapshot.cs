// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Musicians.Entities;

#nullable disable

namespace Musicians.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Musicians.Entities.Models.Album", b =>
                {
                    b.Property<int>("IdAlbum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAlbum"), 1L, 1);

                    b.Property<string>("AlbumName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("IdMusicLabel")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdAlbum");

                    b.HasIndex("IdMusicLabel");

                    b.ToTable("Album", (string)null);

                    b.HasData(
                        new
                        {
                            IdAlbum = 1,
                            AlbumName = "The Beatles",
                            IdMusicLabel = 1,
                            PublishDate = new DateTime(1962, 6, 16, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdAlbum = 2,
                            AlbumName = "Pussycats",
                            IdMusicLabel = 2,
                            PublishDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdAlbum = 3,
                            AlbumName = "When I get home",
                            IdMusicLabel = 3,
                            PublishDate = new DateTime(2019, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Musicians.Entities.Models.Musician", b =>
                {
                    b.Property<int>("IdMusician")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMusician"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nickname")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdMusician");

                    b.ToTable("Musician", (string)null);

                    b.HasData(
                        new
                        {
                            IdMusician = 1,
                            FirstName = "Solange",
                            LastName = "Knowles",
                            Nickname = "Solo"
                        },
                        new
                        {
                            IdMusician = 2,
                            FirstName = "John",
                            LastName = "Lennon",
                            Nickname = "The Beatle"
                        },
                        new
                        {
                            IdMusician = 3,
                            FirstName = "Paul",
                            LastName = "McCartney"
                        });
                });

            modelBuilder.Entity("Musicians.Entities.Models.MusicianTrack", b =>
                {
                    b.Property<int>("IdTrack")
                        .HasColumnType("int");

                    b.Property<int>("IdMusician")
                        .HasColumnType("int");

                    b.HasKey("IdTrack", "IdMusician");

                    b.HasIndex("IdMusician");

                    b.ToTable("Musician_Track", (string)null);

                    b.HasData(
                        new
                        {
                            IdTrack = 1,
                            IdMusician = 2
                        },
                        new
                        {
                            IdTrack = 2,
                            IdMusician = 1
                        },
                        new
                        {
                            IdTrack = 3,
                            IdMusician = 2
                        },
                        new
                        {
                            IdTrack = 3,
                            IdMusician = 3
                        },
                        new
                        {
                            IdTrack = 4,
                            IdMusician = 1
                        },
                        new
                        {
                            IdTrack = 5,
                            IdMusician = 1
                        },
                        new
                        {
                            IdTrack = 3,
                            IdMusician = 1
                        },
                        new
                        {
                            IdTrack = 6,
                            IdMusician = 3
                        });
                });

            modelBuilder.Entity("Musicians.Entities.Models.MusicLabel", b =>
                {
                    b.Property<int>("IdMusicLabel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMusicLabel"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdMusicLabel");

                    b.ToTable("MusicLabel", (string)null);

                    b.HasData(
                        new
                        {
                            IdMusicLabel = 1,
                            Name = "Beatles"
                        },
                        new
                        {
                            IdMusicLabel = 2,
                            Name = "Kitties"
                        },
                        new
                        {
                            IdMusicLabel = 3,
                            Name = "Saint Heron"
                        });
                });

            modelBuilder.Entity("Musicians.Entities.Models.Track", b =>
                {
                    b.Property<int>("IdTrack")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTrack"), 1L, 1);

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<int?>("IdMusicAlbum")
                        .HasColumnType("int");

                    b.Property<string>("TrackName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdTrack");

                    b.HasIndex("IdMusicAlbum");

                    b.ToTable("Track", (string)null);

                    b.HasData(
                        new
                        {
                            IdTrack = 1,
                            Duration = 3.5899999999999999,
                            IdMusicAlbum = 1,
                            TrackName = "The Beatles"
                        },
                        new
                        {
                            IdTrack = 2,
                            Duration = 2.1400000000000001,
                            IdMusicAlbum = 2,
                            TrackName = "XoXo"
                        },
                        new
                        {
                            IdTrack = 3,
                            Duration = 1.0,
                            TrackName = "The Bottles"
                        },
                        new
                        {
                            IdTrack = 4,
                            Duration = 2.3700000000000001,
                            IdMusicAlbum = 3,
                            TrackName = "Sound of rain"
                        },
                        new
                        {
                            IdTrack = 5,
                            Duration = 1.0,
                            IdMusicAlbum = 3,
                            TrackName = "Almeda"
                        },
                        new
                        {
                            IdTrack = 6,
                            Duration = 0.01,
                            TrackName = "Trash"
                        });
                });

            modelBuilder.Entity("Musicians.Entities.Models.Album", b =>
                {
                    b.HasOne("Musicians.Entities.Models.MusicLabel", "MusicLabel")
                        .WithMany("Albums")
                        .HasForeignKey("IdMusicLabel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MusicLabel");
                });

            modelBuilder.Entity("Musicians.Entities.Models.MusicianTrack", b =>
                {
                    b.HasOne("Musicians.Entities.Models.Musician", "Musician")
                        .WithMany("MusicianTracks")
                        .HasForeignKey("IdMusician")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Musicians.Entities.Models.Track", "Track")
                        .WithMany("MusicianTracks")
                        .HasForeignKey("IdTrack")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Musician");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("Musicians.Entities.Models.Track", b =>
                {
                    b.HasOne("Musicians.Entities.Models.Album", "Album")
                        .WithMany("Tracks")
                        .HasForeignKey("IdMusicAlbum");

                    b.Navigation("Album");
                });

            modelBuilder.Entity("Musicians.Entities.Models.Album", b =>
                {
                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("Musicians.Entities.Models.Musician", b =>
                {
                    b.Navigation("MusicianTracks");
                });

            modelBuilder.Entity("Musicians.Entities.Models.MusicLabel", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("Musicians.Entities.Models.Track", b =>
                {
                    b.Navigation("MusicianTracks");
                });
#pragma warning restore 612, 618
        }
    }
}
